locals {
  subnets = {
%{ for subnet_name, address_prefix in vnet_config.subnets ~}
    ${subnet_name} = "${address_prefix}"
%{ endfor ~}
  }
  subnet_ids = {
    # Maps subnet logical name to id
    for id in azurerm_virtual_network.this.subnet.*.id : reverse(split("-", id))[0] => id
  }
}

resource "azurerm_virtual_network" "this" {
  name                = "vnet-${replace("${vnet_config.address_space}","/[./]/","-")}-$${local.default_location}"
  location            = local.default_location
  resource_group_name = azurerm_resource_group.network.name
  address_space       = ["${vnet_config.address_space}"]
  dns_servers         = local.dns_servers
  tags                = local.tags

  dynamic "subnet" {
    for_each = local.subnets
    content {
      name             = "snet-${replace(subnet.value, "/[./]/", "-")}-${subnet.key}"
      address_prefixes = [subnet.value]
      %{ if sql.create && sql.type == "managed" && subnet.key == sql.subnet ~}
      security_group   = azurerm_network_security_group.db_managedinstance.id
      %{ else ~}
      security_group   = azurerm_network_security_group.this.id
      %{ endif ~}
      %{ if sql.create && sql.type == "managed" && subnet.key == sql.subnet ~}
      delegation {
        name = "managedinstancedelegation"

        service_delegation {
          name    = "Microsoft.Sql/managedInstances"
          actions = ["Microsoft.Network/virtualNetworks/subnets/join/action", "Microsoft.Network/virtualNetworks/subnets/prepareNetworkPolicies/action", "Microsoft.Network/virtualNetworks/subnets/unprepareNetworkPolicies/action"]
        }
      }
      %{ endif ~}
    }
  }
}

%{ if sql.create && sql.type == "managed" ~}
resource "azurerm_network_security_group" "db_managedinstance" {
  name                = "nsg-vnet-$${azurerm_subnet.this[${sql.subnet}].name}"
  location            = local.default_location
  resource_group_name = azurerm_resource_group.${sql.rg_key}.name
  tags                = merge(local.sql_tags, local.tags)
}

resource "azurerm_route_table" "db_managedinstance" {
  name                          = "rt-$${azurerm_subnet.this[${sql.subnet}].name}"
  location                      = local.default_location
  resource_group_name           = azurerm_resource_group.${sql.rg_key}.name
  bgp_route_propagation_enabled = false
  tags                         = merge(local.sql_tags, local.tags)

  depends_on = [
    azurerm_subnet.this[${sql.subnet}]
  ]
}

resource "azurerm_subnet_route_table_association" "db_managedinstance" {
  subnet_id      = azurerm_subnet.this[${sql.subnet}].id
  route_table_id = azurerm_route_table.db_managedinstance.id
}
%{ endif ~}